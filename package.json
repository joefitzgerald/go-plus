{
  "name": "go-plus",
  "description": "Makes working with Go in Atom awesome.",
  "keywords": [
    "go",
    "golang",
    "autocomplete",
    "gofmt",
    "gocode",
    "format",
    "fmt",
    "godef",
    "godoc",
    "goimports",
    "gorename",
    "goreturns",
    "lint",
    "vet",
    "gometalinter",
    "go-debug",
    "delve",
    "hyperclick",
    "guru"
  ],
  "version": "6.1.0",
  "main": "./lib/main",
  "scripts": {
    "flow": "flow",
    "lint": "eslint ./lib ./spec",
    "lintfix": "eslint ./lib ./spec --fix",
    "fmt": "prettier --write lib/**/*.js spec/**/*.js"
  },
  "license": "Apache-2.0",
  "engines": {
    "atom": ">=1.12.7 <2.0.0",
    "node": ">= 6"
  },
  "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
  "homepage": "https://atom.io/packages/go-plus",
  "repository": "https://github.com/joefitzgerald/go-plus",
  "bugs": {
    "url": "https://github.com/joefitzgerald/go-plus/issues"
  },
  "activationHooks": [
    "core:loaded-shell-environment"
  ],
  "activationCommands": {
    "atom-workspace": [
      "golang:get-package",
      "golang:update-tools",
      "golang:toggle-panel",
      "golang:gofmt",
      "golang:goimports",
      "golang:goreturns",
      "golang:showdoc"
    ],
    "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
      "golang:run-tests",
      "golang:hide-coverage",
      "golang:gorename"
    ]
  },
  "atomTranspilers": [
    {
      "glob": "{lib,spec}/**/*.js",
      "transpiler": "atom-babel6-transpiler",
      "options": {
        "cacheKeyFiles": [
          "package.json",
          ".babelrc"
        ]
      }
    }
  ],
  "dependencies": {
    "@atom/temp": "^0.8.4",
    "ansi-style-parser": "^2.0.0",
    "atom-babel6-transpiler": "^1.2.0",
    "atom-select-list": "^0.7.2",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "etch": "0.14.0",
    "etch-octicon": "^2.0.0",
    "fs-extra": "^8.0.0",
    "fuzzaldrin-plus": "^0.6.0",
    "resize-observer-polyfill": "^1.5.1",
    "semver": "^6.0.0",
    "yargs-parser": "^13.1.0"
  },
  "devDependencies": {
    "babel-eslint": "10.0.1",
    "eslint": "^5.12.1",
    "eslint-config-prettier": "^4.1.0",
    "eslint-plugin-flowtype": "^3.2.1",
    "eslint-plugin-prettier": "^3.0.1",
    "eslint-plugin-promise": "^4.1.1",
    "eslint-plugin-react": "^7.13.0",
    "flow-bin": "^0.95.0",
    "prettier": "^1.15.3"
  },
  "providedServices": {
    "go-config": {
      "versions": {
        "1.0.0": "provideGoConfig"
      }
    },
    "go-get": {
      "versions": {
        "2.0.0": "provideGoGet"
      }
    },
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideReferences"
      }
    },
    "code-highlight": {
      "versions": {
        "0.1.0": "provideCodeHighlight"
      }
    },
    "code-format.file": {
      "versions": {
        "0.1.0": "provideCodeFormatter"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    }
  },
  "consumedServices": {
    "go-plus.view": {
      "versions": {
        "0.1.0": "consumeViewProvider"
      }
    },
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinter"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatipService"
      }
    },
    "atom-ide-busy-signal": {
      "versions": {
        "0.1.0": "consumeBusySignal"
      }
    },
    "console": {
      "versions": {
        "0.1.0": "consumeConsole"
      }
    }
  },
  "configSchema": {
    "disabledBundledPackages": {
      "title": "Disabled Bundled Packages",
      "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      }
    },
    "panel": {
      "title": "Panel",
      "type": "object",
      "properties": {
        "displayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "focusOnFailure": {
          "title": "Focus the go-plus panel on failure ",
          "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "fontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        }
      }
    },
    "config": {
      "title": "Config",
      "type": "object",
      "properties": {
        "gopath": {
          "title": "GOPATH",
          "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
          "type": "string",
          "default": "",
          "order": 1
        },
        "compileOnSave": {
          "title": "Compile on Save",
          "description": "Compile the current package when a file is saved and provide linter errors.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "additionalBuildArgs": {
          "title": "Additional build/install args",
          "description": "Arguments to pass to `go build` and `go install` commands.",
          "type": "string",
          "default": "",
          "order": 3
        },
        "additionalTestArgs": {
          "title": "Additional test args",
          "description": "Arguments to pass to `go test` commands.",
          "type": "string",
          "default": "",
          "order": 4
        },
        "buildTimeout": {
          "title": "Build Timeout",
          "description": "Stop running a build after this number of milliseconds",
          "type": "integer",
          "default": 10000,
          "order": 5
        }
      }
    },
    "autocomplete": {
      "title": "Autocomplete",
      "type": "object",
      "properties": {
        "scopeBlacklist": {
          "title": "Scope Blacklist",
          "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
          "type": "string",
          "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
          "order": 1
        },
        "suppressBuiltinAutocompleteProvider": {
          "title": "Suppress The Provider Built-In To autocomplete-plus",
          "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "suppressActivationForCharacters": {
          "title": "Suppress Activation For Characters",
          "description": "Suggestions will not be provided when you type one of these characters.",
          "type": "array",
          "default": [
            "comma",
            "newline",
            "space",
            "tab",
            "/",
            "\\",
            "(",
            ")",
            "\"",
            "'",
            ":",
            ";",
            "<",
            ">",
            "~",
            "!",
            "@",
            "#",
            "$",
            "%",
            "^",
            "&",
            "*",
            "|",
            "+",
            "=",
            "[",
            "]",
            "{",
            "}",
            "`",
            "~",
            "?",
            "-"
          ],
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "snippetMode": {
          "title": "Snippet Mode",
          "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
          "type": "string",
          "default": "name",
          "enum": [
            "name",
            "nameAndType",
            "none"
          ],
          "order": 4
        },
        "proposeBuiltins": {
          "title": "Propose Builtins",
          "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
          "type": "boolean",
          "default": true,
          "order": 5
        },
        "unimportedPackages": {
          "title": "Unimported Packages",
          "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
          "type": "boolean",
          "default": true,
          "order": 6
        }
      }
    },
    "format": {
      "title": "Format",
      "type": "object",
      "properties": {
        "tool": {
          "title": "Format Tool",
          "description": "Choose one: goimports, goreturns, or gofmt",
          "type": "string",
          "default": "goimports",
          "enum": [
            "goimports",
            "goreturns",
            "gofmt"
          ],
          "order": 1
        }
      }
    },
    "get": {
      "title": "Go Get",
      "type": "object",
      "properties": {
        "timeout": {
          "title": "Timeout",
          "description": "Stop trying to update tools after this number of milliseconds",
          "type": "integer",
          "default": 60000,
          "order": 1
        }
      }
    },
    "guru": {
      "title": "Guru",
      "type": "object",
      "properties": {
        "highlightIdentifiers": {
          "title": "Highlight Identifiers When Cursor Moves",
          "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
          "type": "boolean",
          "default": true,
          "order": 1
        }
      }
    },
    "lint": {
      "title": "Lint",
      "type": "object",
      "properties": {
        "tool": {
          "title": "Linter",
          "description": "The linter that is used to lint your code",
          "type": "string",
          "default": "gometalinter",
          "enum": [
            "gometalinter",
            "revive",
            "golangci-lint"
          ],
          "order": 1
        },
        "args": {
          "title": "Linter Arguments",
          "description": "Arguments to be passed when invoking the provided linter.",
          "type": "any",
          "default": "",
          "order": 2
        }
      }
    },
    "navigator": {
      "title": "Navigator",
      "type": "object",
      "properties": {
        "mode": {
          "title": "Mode",
          "description": "Use guru or godef for go to definition",
          "type": "string",
          "default": "godef",
          "enum": [
            "guru",
            "godef"
          ],
          "order": 1
        }
      }
    },
    "test": {
      "title": "Test",
      "type": "object",
      "properties": {
        "runTestsOnSave": {
          "title": "Run Tests On Save",
          "description": "Run `go test -coverprofile` each time a file is saved",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "timeout": {
          "title": "Timeout",
          "description": "Stop running tests after this number of milliseconds",
          "type": "integer",
          "default": 60000,
          "order": 2
        },
        "runTestsWithCoverage": {
          "title": "Run Tests With Coverage",
          "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
          "type": "boolean",
          "default": true,
          "order": 3
        },
        "runTestsWithShortFlag": {
          "title": "Run Tests With Short Flag Set",
          "description": "Runs `go test` with `-short` flag set",
          "type": "boolean",
          "default": true,
          "order": 4
        },
        "runTestsWithVerboseFlag": {
          "title": "Run Tests With Verbose Flag Set",
          "description": "Runs `go test` with `-v` flag set",
          "type": "boolean",
          "default": false,
          "order": 5
        },
        "coverageHighlightMode": {
          "title": "Coverage Highlight Mode",
          "description": "Control the way that coverage highlighting occurs",
          "type": "string",
          "default": "uncovered",
          "enum": [
            "covered-and-uncovered",
            "covered",
            "uncovered",
            "disabled"
          ],
          "order": 6
        },
        "coverageDisplayMode": {
          "title": "Coverage Display Mode",
          "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
          "type": "string",
          "default": "highlight",
          "enum": [
            "highlight",
            "gutter"
          ],
          "order": 7
        }
      }
    }
  }
}
